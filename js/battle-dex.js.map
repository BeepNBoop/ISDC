{"version":3,"sources":["../src/battle-dex.ts"],"names":["window","global","exports","nodewebkit","process","versions","toID","text","id","userid","toLowerCase","replace","toUserid","PSUtils","splitFirst","str","delimiter","limit","splitStr","length","delimiterIndex","indexOf","push","slice","compare","a","b","localeCompare","Array","isArray","i","comparison","reverse","Error","sortBy","array","callback","sort","toRoomid","roomid","toName","name","trim","substr","Dex","gen","modid","cache","statNames","statNamesExceptHP","pokeballs","resourcePrefix","fxPrefix","document","location","protocol","Replays","Config","routes","client","loadedSpriteData","xy","bw","moddedDexes","mod","BattleTeambuilderTable","ModdedDex","forGen","resolveAvatar","avatar","BattleAvatarNumbers","charAt","includes","server","registered","port","host","encodeURIComponent","sanitizeName","prefs","prop","Storage","getShortName","shortName","getEffect","getItem","getAbility","getMove","PureEffect","nameOrMove","BattleAliases","BattleMovedex","data","exists","exec","hpWithType","hpPower","basePower","Number","move","Move","getGen3Category","type","nameOrItem","BattleItems","item","Item","nameOrAbility","BattleAbilities","ability","Ability","getSpecies","nameOrSpecies","formid","BattlePokedexAltForms","BattlePokedex","BattleBaseSpeciesChart","baseSpeciesId","startsWith","species","tier","baseSpecies","Species","cosmeticFormes","forme","baseForme","otherFormes","getTier","pokemon","genNum","table","overrideTier","getType","toUpperCase","BattleTypeChart","damageTaken","effectType","hasAbility","abilities","loadSpriteData","path","$","attr","qs","split","match","el","createElement","src","getElementsByTagName","appendChild","getSpriteData","isFront","options","mechanicsGen","isDynamax","dynamax","Pokemon","volatiles","transform","shiny","gender","getSpeciesForme","endsWith","spriteData","w","h","y","url","pixelated","isFrontSprite","cryurl","spriteid","dir","facing","graphicsGen","Math","max","min","baseDir","animationData","miscData","speciesid","isTotem","BattlePokemonSprites","BattlePokemonSpritesBW","num","baseSpeciesid","formeid","isMega","afd","noScale","allowAnim","getPokemonIconNum","isFemale","facingLeft","BattlePokemonIconIndexes","BattlePokemonIconIndexesLeft","getPokemonIcon","speciesForme","formechange","top","floor","left","fainted","getTeambuilderSpriteData","spriteDir","x","xydexExists","isNonstandard","getTeambuilderSprite","getItemIcon","spritenum","getTypeIcon","sanitizedType","getCategoryIcon","category","categoryID","sanitizedCategory","getPokeballs","Object","values","isPokeball","Moves","Items","Abilities","Types","parseInt","hasOwnProperty","overrideAcc","accuracy","overrideBP","overridePP","pp","overrideMoveType","overrideMoveDesc","shortDesc","overrideItemDesc","overrideAbilityDesc","overrideAbility","removeSecondAbility","overrideHiddenAbility","overrideStats","baseStats","overrideType","types","removeType","overrideTypeChart","require"],"mappings":"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","sourcesContent":["/**\n * Pokemon Showdown Dex\n *\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\n * designed for use in browsers rather than in Node.\n *\n * This is a generic utility library for Pokemon Showdown code: any\n * code shared between the replay viewer and the client usually ends up\n * here.\n *\n * Licensing note: PS's client has complicated licensing:\n * - The client as a whole is AGPLv3\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\n *\n * Compiled into battledata.js which includes all dependencies\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\ndeclare var require: any;\ndeclare var global: any;\n\nif (typeof window === 'undefined') {\n\t// Node\n\t(global as any).window = global;\n} else {\n\t// browser (possibly NW.js!)\n\twindow.exports = window;\n}\n\n// @ts-ignore\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions && process.versions['node-webkit']);\n\nfunction toID(text: any) {\n\tif (text?.id) {\n\t\ttext = text.id;\n\t} else if (text?.userid) {\n\t\ttext = text.userid;\n\t}\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\n\treturn ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\n}\n\nfunction toUserid(text: any) {\n\treturn toID(text);\n}\n\ntype Comparable = number | string | boolean | Comparable[] | {reverse: Comparable};\nconst PSUtils = new class {\n\t/**\n\t * Like string.split(delimiter), but only recognizes the first `limit`\n\t * delimiters (default 1).\n\t *\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\n\t *\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\n\t *\n\t * Returns an array of length exactly limit + 1.\n\t */\n\tsplitFirst(str: string, delimiter: string, limit: number = 1) {\n\t\tlet splitStr: string[] = [];\n\t\twhile (splitStr.length < limit) {\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\n\t\t\tif (delimiterIndex >= 0) {\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\n\t\t\t} else {\n\t\t\t\tsplitStr.push(str);\n\t\t\t\tstr = '';\n\t\t\t}\n\t\t}\n\t\tsplitStr.push(str);\n\t\treturn splitStr;\n\t}\n\n\t/**\n\t * Compares two variables; intended to be used as a smarter comparator.\n\t * The two variables must be the same type (TypeScript will not check this).\n\t *\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\n\t * - Arrays are sorted lexically in the order of their elements\n\t *\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\n\t */\n\tcompare(a: Comparable, b: Comparable): number {\n\t\tif (typeof a === 'number') {\n\t\t\treturn a - (b as number);\n\t\t}\n\t\tif (typeof a === 'string') {\n\t\t\treturn a.localeCompare(b as string);\n\t\t}\n\t\tif (typeof a === 'boolean') {\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\n\t\t}\n\t\tif (Array.isArray(a)) {\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\n\t\t\t\tif (comparison) return comparison;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\tif (a.reverse) {\n\t\t\treturn PSUtils.compare((b as {reverse: string}).reverse, a.reverse);\n\t\t}\n\t\tthrow new Error(`Passed value ${a} is not comparable`);\n\t}\n\t/**\n\t * Sorts an array according to the callback's output on its elements.\n\t *\n\t * The callback's output is compared according to `PSUtils.compare` (in\n\t * particular, it supports arrays so you can sort by multiple things).\n\t */\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\n\t/**\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\n\t * unlike `array.sort`)\n\t */\n\tsortBy<T extends Comparable>(array: T[]): T[];\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\n\t}\n};\n\n/**\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\n * Shouldn't actually do anything except against malicious input.\n */\nfunction toRoomid(roomid: string) {\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\n}\n\nfunction toName(name: any) {\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\n\tname = ('' + name).replace(/[\\|\\s\\[\\]\\,\\u202e]+/g, ' ').trim();\n\tif (name.length > 18) name = name.substr(0, 18).trim();\n\n\t// remove zalgo\n\tname = name.replace(\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\n\t\t''\n\t);\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\n\n\treturn name;\n}\n\ninterface SpriteData {\n\tw: number;\n\th: number;\n\ty?: number;\n\tgen?: number;\n\turl?: string;\n\trawHTML?: string;\n\tpixelated?: boolean;\n\tisFrontSprite?: boolean;\n\tcryurl?: string;\n\tshiny?: boolean;\n}\n\ninterface TeambuilderSpriteData {\n\tx: number;\n\ty: number;\n\tspriteDir: string;\n\tspriteid: string;\n\tshiny?: boolean;\n}\n\nconst Dex = new class implements ModdedDex {\n\treadonly gen = 8;\n\treadonly modid = 'gen8' as ID;\n\treadonly cache = null!;\n\n\treadonly statNames: ReadonlyArray<StatName> = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\n\treadonly statNamesExceptHP: ReadonlyArray<StatNameExceptHP> = ['atk', 'def', 'spa', 'spd', 'spe'];\n\n\tpokeballs: string[] | null = null;\n\n\tresourcePrefix = (() => {`https://raw.githubusercontent.com/BeepNBoop/pokemonshowdownimages/master/`;\n\t})();\n\n\tfxPrefix = (() => {\n\t\tif (window.document?.location?.protocol === 'file:') {\n\t\t\tif (window.Replays) return `https://${window.Config ? Config.routes.client : 'neodraft.herokuapp.com'}/fx/`;\n\t\t\treturn `fx/`;\n\t\t}\n\t\treturn `//${window.Config ? Config.routes.client : 'neodraft.herokuapp.com'}/fx/`;\n\t})();\n\n\tloadedSpriteData = {xy: 1, bw: 0};\n\tmoddedDexes: {[mod: string]: ModdedDex} = {};\n\n\tmod(modid: ID): ModdedDex {\n\t\tif (modid === 'gen8') return this;\n\t\tif (!window.BattleTeambuilderTable) return this;\n\t\tif (modid in this.moddedDexes) {\n\t\t\treturn this.moddedDexes[modid];\n\t\t}\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\n\t\treturn this.moddedDexes[modid];\n\t}\n\tforGen(gen: number) {\n\t\tif (!gen) return this;\n\t\treturn this.mod(`gen${gen}` as ID);\n\t}\n\n\tresolveAvatar(avatar: string): string {\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\n\t\t\tavatar = BattleAvatarNumbers[avatar];\n\t\t}\n\t\tif (avatar.charAt(0) === '#') {\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\n\t\t}\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\n\t\t\t// custom avatar served by the server\n\t\t\tlet protocol = (Config.server.port === 443) ? 'https' : 'http';\n\t\t\treturn protocol + '://' + Config.server.host + ':' + Config.server.port +\n\t\t\t\t'/avatars/' + encodeURIComponent(avatar).replace(/\\%3F/g, '?');\n\t\t}\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\n\t}\n\n\t/**\n\t * This is used to sanitize strings from data files like `moves.js` and\n\t * `teambuilder-tables.js`.\n\t *\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\n\t * escape it before putting it in HTML.\n\t *\n\t * None of these characters belong in these files, anyway. (They can be used\n\t * in move descriptions, but those are served from `text.js`, which are\n\t * definitely always treated as unsanitized.)\n\t */\n\tsanitizeName(name: any) {\n\t\tif (!name) return '';\n\t\treturn ('' + name)\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\n\t\t\t.slice(0, 50);\n\t}\n\n\tprefs(prop: string) {\n\t\t// @ts-ignore\n\t\treturn window.Storage?.prefs?.(prop);\n\t}\n\n\tgetShortName(name: string) {\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\n\t\tif (shortName.indexOf('(') >= 0) {\n\t\t\tshortName += name.slice(shortName.length).replace(/[^\\(\\)]+/g, '').replace(/\\(\\)/g, '');\n\t\t}\n\t\treturn shortName;\n\t}\n\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\n\t\tname = (name || '').trim();\n\t\tif (name.substr(0, 5) === 'item:') {\n\t\t\treturn Dex.getItem(name.substr(5).trim());\n\t\t} else if (name.substr(0, 8) === 'ability:') {\n\t\t\treturn Dex.getAbility(name.substr(8).trim());\n\t\t} else if (name.substr(0, 5) === 'move:') {\n\t\t\treturn Dex.getMove(name.substr(5).trim());\n\t\t}\n\t\tlet id = toID(name);\n\t\treturn new PureEffect(id, name);\n\t}\n\n\tgetMove(nameOrMove: string | Move | null | undefined): Move {\n\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\n\t\t\t// TODO: don't accept Moves here\n\t\t\treturn nameOrMove;\n\t\t}\n\t\tlet name = nameOrMove || '';\n\t\tlet id = toID(nameOrMove);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\n\t\tlet data = window.BattleMovedex[id];\n\t\tif (data && typeof data.exists === 'boolean') return data;\n\n\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\n\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\n\t\t\tdata = {\n\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\n\t\t\t\tbasePower: Number(hpPower) || 60,\n\t\t\t};\n\t\t}\n\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\n\t\t\tdata = {\n\t\t\t\t...(window.BattleMovedex['return'] || {}),\n\t\t\t\tbasePower: Number(id.slice(6)),\n\t\t\t};\n\t\t}\n\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\n\t\t\tdata = {\n\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\n\t\t\t\tbasePower: Number(id.slice(11)),\n\t\t\t};\n\t\t}\n\n\t\tif (!data) data = {exists: false};\n\t\tlet move = new Move(id, name, data);\n\t\twindow.BattleMovedex[id] = move;\n\t\treturn move;\n\t}\n\n\tgetGen3Category(type: string) {\n\t\treturn [\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\n\t\t].includes(type) ? 'Special' : 'Physical';\n\t}\n\n\tgetItem(nameOrItem: string | Item | null | undefined): Item {\n\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\n\t\t\t// TODO: don't accept Items here\n\t\t\treturn nameOrItem;\n\t\t}\n\t\tlet name = nameOrItem || '';\n\t\tlet id = toID(nameOrItem);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\tlet data = window.BattleItems[id];\n\t\tif (data && typeof data.exists === 'boolean') return data;\n\t\tif (!data) data = {exists: false};\n\t\tlet item = new Item(id, name, data);\n\t\twindow.BattleItems[id] = item;\n\t\treturn item;\n\t}\n\n\tgetAbility(nameOrAbility: string | Ability | null | undefined): Ability {\n\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\n\t\t\t// TODO: don't accept Abilities here\n\t\t\treturn nameOrAbility;\n\t\t}\n\t\tlet name = nameOrAbility || '';\n\t\tlet id = toID(nameOrAbility);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\n\t\tlet data = window.BattleAbilities[id];\n\t\tif (data && typeof data.exists === 'boolean') return data;\n\t\tif (!data) data = {exists: false};\n\t\tlet ability = new Ability(id, name, data);\n\t\twindow.BattleAbilities[id] = ability;\n\t\treturn ability;\n\t}\n\n\tgetSpecies(nameOrSpecies: string | Species | null | undefined): Species {\n\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\n\t\t\t// TODO: don't accept Species' here\n\t\t\treturn nameOrSpecies;\n\t\t}\n\t\tlet name = nameOrSpecies || '';\n\t\tlet id = toID(nameOrSpecies);\n\t\tlet formid = id;\n\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\n\t\tif (formid in window.BattlePokedexAltForms) return window.BattlePokedexAltForms[formid];\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\n\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\n\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\n\t\t\t\t\tid = baseSpeciesId;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\n\t\tlet data = window.BattlePokedex[id];\n\n\t\tlet species: Species;\n\t\tif (data && typeof data.exists === 'boolean') {\n\t\t\tspecies = data;\n\t\t} else {\n\t\t\tif (!data) data = {exists: false};\n\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\n\t\t\t\tdata.tier = this.getSpecies(id.slice(0, -5)).tier;\n\t\t\t}\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\n\t\t\t\tdata.tier = this.getSpecies(data.baseSpecies).tier;\n\t\t\t}\n\t\t\tspecies = new Species(id, name, data);\n\t\t\twindow.BattlePokedex[id] = species;\n\t\t}\n\n\t\tif (species.cosmeticFormes) {\n\t\t\tfor (const forme of species.cosmeticFormes) {\n\t\t\t\tif (toID(forme) === formid) {\n\t\t\t\t\tspecies = new Species(formid, name, {\n\t\t\t\t\t\t...species,\n\t\t\t\t\t\tname: forme,\n\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\n\t\t\t\t\t\tbaseForme: \"\",\n\t\t\t\t\t\tbaseSpecies: species.name,\n\t\t\t\t\t\totherFormes: null,\n\t\t\t\t\t});\n\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn species;\n\t}\n\n\t/** @deprecated */\n\tgetTier(pokemon: string, genNum = 8, mod?: string): string {\n\t\tlet species = this.getSpecies(pokemon);\n\t\tif (genNum < 8) species = this.forGen(genNum).getSpecies(pokemon);\n\t\tlet table = window.BattleTeambuilderTable;\n\t\tif (!table) return species.tier;\n\t\tif (mod === 'doubles') {\n\t\t\ttable = table[`gen${genNum}doubles`];\n\t\t} else if (genNum < 8) {\n\t\t\ttable = table[`gen${genNum}`];\n\t\t} else if (mod && table[toID(mod)]) {\n\t\t\ttable = table[toID(mod)];\n\t\t}\n\n\t\tif (!table.overrideTier) return species.tier;\n\n\t\tlet id = species.id;\n\t\tif (id in table.overrideTier) {\n\t\t\treturn table.overrideTier[id];\n\t\t}\n\n\t\treturn species.tier;\n\t}\n\n\tgetType(type: any): Effect & {damageTaken?: AnyObject, HPivs?: Partial<StatsTable>, HPdvs: Partial<StatsTable>} {\n\t\tif (!type || typeof type === 'string') {\n\t\t\tlet id = toID(type) as string;\n\t\t\tid = id.substr(0, 1).toUpperCase() + id.substr(1);\n\t\t\ttype = (window.BattleTypeChart && window.BattleTypeChart[id]) || {};\n\t\t\tif (type.damageTaken) type.exists = true;\n\t\t\tif (!type.id) type.id = id;\n\t\t\tif (!type.name) type.name = id;\n\t\t\tif (!type.effectType) {\n\t\t\t\ttype.effectType = 'Type';\n\t\t\t}\n\t\t}\n\t\treturn type;\n\t}\n\n\thasAbility(species: Species, ability: string) {\n\t\tfor (const i in species.abilities) {\n\t\t\t// @ts-ignore\n\t\t\tif (ability === species.abilities[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tloadSpriteData(gen: 'xy' | 'bw') {\n\t\tif (this.loadedSpriteData[gen]) return;\n\t\tthis.loadedSpriteData[gen] = 1;\n\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\n\t\tlet qs = '?' + (path.split('?')[1] || '');\n\t\tpath = (path.match(/.+?(?=data\\/pokedex-mini\\.js)/) || [])[0] || '';\n\n\t\tlet el = document.createElement('script');\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\n\t}\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\n\t\tgen?: number,\n\t\tshiny?: boolean,\n\t\tgender?: GenderName,\n\t\tafd?: boolean,\n\t\tnoScale?: boolean,\n\t\tmod?: string,\n\t\tdynamax?: boolean,\n\t} = {gen: 6}) {\n\t\tconst mechanicsGen = options.gen || 6;\n\t\tlet isDynamax = !!options.dynamax;\n\t\tif (pokemon instanceof Pokemon) {\n\t\t\tif (pokemon.volatiles.transform) {\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\n\t\t\t} else {\n\t\t\t\toptions.shiny = pokemon.shiny;\n\t\t\t\toptions.gender = pokemon.gender;\n\t\t\t}\n\t\t\tif (pokemon.volatiles.dynamax) isDynamax = true;\n\t\t\tpokemon = pokemon.getSpeciesForme();\n\t\t}\n\t\tconst species = Dex.getSpecies(pokemon);\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\n\t\tlet spriteData = {\n\t\t\tgen: mechanicsGen,\n\t\t\tw: 96,\n\t\t\th: 96,\n\t\t\ty: 0,\n\t\t\turl: Dex.resourcePrefix + 'sprites/',\n\t\t\tpixelated: true,\n\t\t\tisFrontSprite: false,\n\t\t\tcryurl: '',\n\t\t\tshiny: options.shiny,\n\t\t};\n\t\tlet name = species.spriteid;\n\t\tlet dir;\n\t\tlet facing;\n\t\tif (isFront) {\n\t\t\tspriteData.isFrontSprite = true;\n\t\t\tdir = '';\n\t\t\tfacing = 'front';\n\t\t} else {\n\t\t\tdir = '-back';\n\t\t\tfacing = 'back';\n\t\t}\n\n\t\t// Decide which gen sprites to use.\n\t\t//\n\t\t// There are several different generations we care about here:\n\t\t//\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\n\t\t//\n\t\tlet graphicsGen = mechanicsGen;\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', ''][spriteData.gen];\n\n\t\tlet animationData = null;\n\t\tlet miscData = null;\n\t\tlet speciesid = species.id;\n\t\tif (species.isTotem) speciesid = toID(name);\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\n\t\t}\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\n\t\t}\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\n\t\tif (!animationData) animationData = {};\n\t\tif (!miscData) miscData = {};\n\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\n\t\t\tlet formeid = species.formeid;\n\t\t\tif (species.isMega || formeid && (\n\t\t\t\tformeid === '-crowned' ||\n\t\t\t\tformeid === '-eternal' ||\n\t\t\t\tformeid === '-eternamax' ||\n\t\t\t\tformeid === '-hangry' ||\n\t\t\t\tformeid === '-lowkey' ||\n\t\t\t\tformeid === '-noice' ||\n\t\t\t\tformeid === '-primal' ||\n\t\t\t\tformeid === '-rapidstrike' ||\n\t\t\t\tformeid === '-school' ||\n\t\t\t\tformeid === '-sky' ||\n\t\t\t\tformeid === '-starter' ||\n\t\t\t\tformeid === '-super' ||\n\t\t\t\tformeid === '-therian' ||\n\t\t\t\tformeid === '-unbound' ||\n\t\t\t\tbaseSpeciesid === 'calyrex' ||\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\n\t\t\t\tbaseSpeciesid === 'cramorant' ||\n\t\t\t\tbaseSpeciesid === 'indeedee' ||\n\t\t\t\tbaseSpeciesid === 'lycanroc' ||\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\n\t\t\t\tbaseSpeciesid === 'slowpoke' ||\n\t\t\t\tbaseSpeciesid === 'zygarde'\n\t\t\t)) {\n\t\t\t\tspriteData.cryurl += formeid;\n\t\t\t}\n\t\t\tspriteData.cryurl += '.mp3';\n\t\t}\n\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\n\n\t\t// April Fool's 2014\n\t\tif (window.Config && Config.server && Config.server.afd || options.afd) {\n\t\t\tdir = 'afd' + dir;\n\t\t\tspriteData.url += dir + '/' + name + '.png';\n\t\t\t// Duplicate code but needed to make AFD tinymax work\n\t\t\t// April Fool's 2020\n\t\t\tif (isDynamax && !options.noScale) {\n\t\t\t\tspriteData.w *= 0.25;\n\t\t\t\tspriteData.h *= 0.25;\n\t\t\t\tspriteData.y += -22;\n\t\t\t} else if (species.isTotem && !options.noScale) {\n\t\t\t\tspriteData.w *= 0.5;\n\t\t\t\tspriteData.h *= 0.5;\n\t\t\t\tspriteData.y += -11;\n\t\t\t}\n\t\t\treturn spriteData;\n\t\t}\n\n\t\t// Mod Cries\n\t\tif (options.mod) {\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\n\t\t\tspriteData.cryurl += '.mp3';\n\t\t}\n\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\n\t\tlet allowAnim = !Dex.prefs('noanim') && !Dex.prefs('nogif');\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\n\t\tif (allowAnim && animationData[facing] && spriteData.gen >= 5) {\n\t\t\tif (facing.slice(-1) === 'f') name += '-f';\n\t\t\tdir = baseDir + 'ani' + dir;\n\n\t\t\tspriteData.w = animationData[facing].w;\n\t\t\tspriteData.h = animationData[facing].h;\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\n\t\t} else {\n\t\t\t// There is no entry or enough data in pokedex-mini.js\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\n\t\t\tdir = (baseDir || 'gen5') + dir;\n\n\t\t\t// Gender differences don't exist prior to Gen 4,\n\t\t\t// so there are no sprites for it\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\n\t\t\t\tname += '-f';\n\t\t\t}\n\n\t\t\tspriteData.url += dir + '/' + name + '.png';\n\t\t}\n\n\t\tif (!options.noScale) {\n\t\t\tif (graphicsGen > 4) {\n\t\t\t\t// no scaling\n\t\t\t} else if (spriteData.isFrontSprite) {\n\t\t\t\tspriteData.w *= 2;\n\t\t\t\tspriteData.h *= 2;\n\t\t\t\tspriteData.y += -16;\n\t\t\t} else {\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\n\t\t\t\tspriteData.w *= 2 / 1.5;\n\t\t\t\tspriteData.h *= 2 / 1.5;\n\t\t\t\tspriteData.y += -11;\n\t\t\t}\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\n\t\t}\n\t\tif (isDynamax && !options.noScale) {\n\t\t\tspriteData.w *= 2;\n\t\t\tspriteData.h *= 2;\n\t\t\tspriteData.y += -22;\n\t\t} else if ((species.isTotem || isDynamax) && !options.noScale) {\n\t\t\tspriteData.w *= 1.5;\n\t\t\tspriteData.h *= 1.5;\n\t\t\tspriteData.y += -11;\n\t\t}\n\n\t\treturn spriteData;\n\t}\n\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\n\t\tlet num = 0;\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\n\t\t\tnum = BattlePokemonSprites[id].num;\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\n\t\t\tnum = BattlePokedex[id].num;\n\t\t}\n\t\tif (num < 0) num = 0;\n\t\tif (num > 898) num = 0;\n\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\n\t\t\tnum = BattlePokemonIconIndexes[id];\n\t\t}\n\n\t\tif (isFemale) {\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\n\t\t\t}\n\t\t}\n\t\tif (facingLeft) {\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\n\t\t\t}\n\t\t}\n\t\treturn num;\n\t}\n\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | PokemonSet | null, facingLeft?: boolean) {\n\t\tif (pokemon === 'pokeball') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\n\t\t} else if (pokemon === 'pokeball-statused') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\n\t\t} else if (pokemon === 'pokeball-fainted') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\n\t\t} else if (pokemon === 'pokeball-none') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\n\t\t}\n\n\t\tlet id = toID(pokemon);\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\n\t\t// @ts-ignore\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\n\t\t// @ts-ignore\n\t\tif (pokemon?.species) id = toID(pokemon.species);\n\t\t// @ts-ignore\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\n\t\t\t// @ts-ignore\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\n\t\t}\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\n\n\t\tlet top = Math.floor(num / 12) * 30;\n\t\tlet left = (num % 12) * 40;\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ? `;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v4) no-repeat scroll -${left}px -${top}px${fainted}`;\n\t}\n\n\tgetTeambuilderSpriteData(pokemon: any, gen: number = 0): TeambuilderSpriteData {\n\t\tlet id = toID(pokemon.species);\n\t\tlet spriteid = pokemon.spriteid;\n\t\tlet species = Dex.getSpecies(pokemon.species);\n\t\tif (pokemon.species && !spriteid) {\n\t\t\tspriteid = species.spriteid || toID(pokemon.species);\n\t\t}\n\t\tif (species.exists === false) return { spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5 };\n\t\tconst spriteData: TeambuilderSpriteData = {\n\t\t\tspriteid,\n\t\t\tspriteDir: 'sprites/dex',\n\t\t\tx: -2,\n\t\t\ty: -3,\n\t\t};\n\t\tif (pokemon.shiny) spriteData.shiny = true;\n\t\tif (Dex.prefs('nopastgens')) gen = 6;\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past') || [\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"fidgit\", \"stratagem\", \"tomohawk\", \"mollux\", \"crucibelle\", \"crucibellemega\", \"kerfluffle\", \"pajantom\", \"jumbao\", \"caribolt\", \"smokomodo\", \"snaelstrom\", \"equilibra\", \"astrolotl\", \"scratchet\", \"pluffle\", \"smogecko\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\n\t\t].includes(species.id);\n\t\tif (species.gen === 8) xydexExists = false;\n\t\tif ((!gen || gen >= 6) && xydexExists) {\n\t\t\tif (species.gen >= 7) {\n\t\t\t\tspriteData.x = -6;\n\t\t\t\tspriteData.y = -7;\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 7;\n\t\t\t} else if (id === 'garchomp') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 2;\n\t\t\t} else if (id === 'garchompmega') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 0;\n\t\t\t}\n\t\t\treturn spriteData;\n\t\t}\n\t\tspriteData.spriteDir = 'sprites/gen5';\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\n\t\tspriteData.x = 10;\n\t\tspriteData.y = 5;\n\t\treturn spriteData;\n\t}\n\n\tgetTeambuilderSprite(pokemon: any, gen: number = 0) {\n\t\tif (!pokemon) return '';\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, gen);\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\n\t\treturn 'background-image:url(' + Dex.resourcePrefix + data.spriteDir + shiny + '/' + data.spriteid + '.png);background-position:' + data.x + 'px ' + data.y + 'px;background-repeat:no-repeat';\n\t}\n\n\tgetItemIcon(item: any) {\n\t\tlet num = 0;\n\t\tif (typeof item === 'string' && exports.BattleItems) item = exports.BattleItems[toID(item)];\n\t\tif (item?.spritenum) num = item.spritenum;\n\n\t\tlet top = Math.floor(num / 16) * 24;\n\t\tlet left = (num % 16) * 24;\n\t\treturn 'background:transparent url(' + Dex.resourcePrefix + 'sprites/itemicons-sheet.png?g8) no-repeat scroll -' + left + 'px -' + top + 'px';\n\t}\n\n\tgetTypeIcon(type: string | null, b?: boolean) { // b is just for utilichart.js\n\t\ttype = this.getType(type).name;\n\t\tif (!type) type = '???';\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\n\t}\n\n\tgetCategoryIcon(category: string | null) {\n\t\tconst categoryID = toID(category);\n\t\tlet sanitizedCategory = '';\n\t\tswitch (categoryID) {\n\t\tcase 'physical':\n\t\tcase 'special':\n\t\tcase 'status':\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsanitizedCategory = 'undefined';\n\t\t\tbreak;\n\t\t}\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\n\t}\n\n\tgetPokeballs() {\n\t\tif (this.pokeballs) return this.pokeballs;\n\t\tthis.pokeballs = [];\n\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\n\t\t\tif (!data.isPokeball) continue;\n\t\t\tthis.pokeballs.push(data.name);\n\t\t}\n\t\treturn this.pokeballs;\n\t}\n};\n\nclass ModdedDex {\n\treadonly gen: number;\n\treadonly modid: ID;\n\treadonly cache = {\n\t\tMoves: {} as any as {[k: string]: Move},\n\t\tItems: {} as any as {[k: string]: Item},\n\t\tAbilities: {} as any as {[k: string]: Ability},\n\t\tSpecies: {} as any as {[k: string]: Species},\n\t\tTypes: {} as any as {[k: string]: Effect},\n\t};\n\tpokeballs: string[] | null = null;\n\tconstructor(modid: ID) {\n\t\tthis.modid = modid;\n\t\tlet gen = parseInt(modid.slice(3), 10);\n\t\tif (!modid.startsWith('gen') || !gen) throw new Error(\"Unsupported modid\");\n\t\tthis.gen = gen;\n\t}\n\tgetMove(name: string): Move {\n\t\tlet id = toID(name);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\n\n\t\tlet data = {...Dex.getMove(name)};\n\n\t\tconst table = window.BattleTeambuilderTable[this.modid];\n\t\tif (id in table.overrideAcc) data.accuracy = table.overrideAcc[id];\n\t\tif (id in table.overrideBP) data.basePower = table.overrideBP[id];\n\t\tif (id in table.overridePP) data.pp = table.overridePP[id];\n\t\tif (id in table.overrideMoveType) data.type = table.overrideMoveType[id];\n\t\tfor (let i = this.gen; i < 8; i++) {\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideMoveDesc) {\n\t\t\t\tdata.shortDesc = window.BattleTeambuilderTable['gen' + i].overrideMoveDesc[id];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this.gen <= 3 && data.category !== 'Status') {\n\t\t\tdata.category = Dex.getGen3Category(data.type);\n\t\t}\n\n\t\tconst move = new Move(id, name, data);\n\t\tthis.cache.Moves[id] = move;\n\t\treturn move;\n\t}\n\tgetItem(name: string): Item {\n\t\tlet id = toID(name);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\n\n\t\tlet data = {...Dex.getItem(name)};\n\n\t\tfor (let i = this.gen; i < 8; i++) {\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideItemDesc) {\n\t\t\t\tdata.shortDesc = window.BattleTeambuilderTable['gen' + i].overrideItemDesc[id];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst item = new Item(id, name, data);\n\t\tthis.cache.Items[id] = item;\n\t\treturn item;\n\t}\n\tgetAbility(name: string): Ability {\n\t\tlet id = toID(name);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\n\n\t\tlet data = {...Dex.getAbility(name)};\n\n\t\tfor (let i = this.gen; i < 8; i++) {\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideAbilityDesc) {\n\t\t\t\tdata.shortDesc = window.BattleTeambuilderTable['gen' + i].overrideAbilityDesc[id];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst ability = new Ability(id, name, data);\n\t\tthis.cache.Abilities[id] = ability;\n\t\treturn ability;\n\t}\n\tgetSpecies(name: string): Species {\n\t\tlet id = toID(name);\n\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\tname = BattleAliases[id];\n\t\t\tid = toID(name);\n\t\t}\n\t\tif (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\n\n\t\tlet data = {...Dex.getSpecies(name)};\n\n\t\tconst table = window.BattleTeambuilderTable[this.modid];\n\t\tif (this.gen < 3) {\n\t\t\tdata.abilities = {0: \"None\"};\n\t\t} else {\n\t\t\tlet abilities = {...data.abilities};\n\t\t\tif (id in table.overrideAbility) {\n\t\t\t\tabilities['0'] = table.overrideAbility[id];\n\t\t\t}\n\t\t\tif (id in table.removeSecondAbility) {\n\t\t\t\tdelete abilities['1'];\n\t\t\t}\n\t\t\tif (id in table.overrideHiddenAbility) {\n\t\t\t\tabilities['H'] = table.overrideHiddenAbility[id];\n\t\t\t}\n\t\t\tif (this.gen < 5) delete abilities['H'];\n\t\t\tif (this.gen < 7) delete abilities['S'];\n\n\t\t\tdata.abilities = abilities;\n\t\t}\n\t\tif (id in table.overrideStats) {\n\t\t\tdata.baseStats = {...data.baseStats, ...table.overrideStats[id]};\n\t\t}\n\t\tif (id in table.overrideType) data.types = table.overrideType[id].split('/');\n\n\t\tif (id in table.overrideTier) data.tier = table.overrideTier[id];\n\t\tif (!data.tier && id.slice(-5) === 'totem') {\n\t\t\tdata.tier = this.getSpecies(id.slice(0, -5)).tier;\n\t\t}\n\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\n\t\t\tdata.tier = this.getSpecies(data.baseSpecies).tier;\n\t\t}\n\t\tif (data.gen > this.gen) data.tier = 'Illegal';\n\n\t\tconst species = new Species(id, name, data);\n\t\tthis.cache.Species[id] = species;\n\t\treturn species;\n\t}\n\tgetType(name: string): Effect {\n\t\tlet id = toID(name) as string;\n\t\tid = id.substr(0, 1).toUpperCase() + id.substr(1);\n\n\t\tif (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\n\n\t\tlet data = {...Dex.getType(name)};\n\n\t\tfor (let i = 7; i >= this.gen; i--) {\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].removeType) {\n\t\t\t\tdata.exists = false;\n\t\t\t\t// don't bother correcting its attributes given it doesn't exist\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (id in window.BattleTeambuilderTable['gen' + i].overrideTypeChart) {\n\t\t\t\tdata = {...data, ...window.BattleTeambuilderTable['gen' + i].overrideTypeChart[id]};\n\t\t\t}\n\t\t}\n\n\t\tthis.cache.Types[id] = data;\n\t\treturn data;\n\t}\n\tgetPokeballs() {\n\t\tif (this.pokeballs) return this.pokeballs;\n\t\tthis.pokeballs = [];\n\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\n\t\t\tif (data.gen && data.gen > this.gen) continue;\n\t\t\tif (!data.isPokeball) continue;\n\t\t\tthis.pokeballs.push(data.name);\n\t\t}\n\t\treturn this.pokeballs;\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).Dex = Dex;\n\t(global as any).toID = toID;\n}\n"],"file":"battle-dex.js"}